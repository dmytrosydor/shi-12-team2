#include <iostream>
#include <vector>

using namespace std;

int main() {
    vector<vector<int>> matrix = { // Створюємо двовимірний вектор matrix.
        {1, 2, 3, 4, 5},
        {7, 8, 9, 10, 11},
        {12, 13, 14, 15, 16},
        {17, 18, 19, 20, 21}
    };

    int rows = matrix.size(); // Визначаємо к-сть рядків у матриці, де функція size() для вектора повертає його розмір.
    int cols = matrix[0].size(); // Визначаємо кількості стовпців у матриці, та припускаємо, що всі рядки матриці мають однаковий розмір, тому визначення розміру першого рядка дає кількість стовпців.
    int count = 0; // Створюємо змінну count, для підрахунку к-сті стовпців, які задовільняють певній умові.
    // Зовнішній цикл, ітерується через стовпці матриці, залишаючи зовнішній стовпець. Тобто, це виконується для кожного стовпця, крім першого та останнього.
    for (int j = 1; j < cols - 1; ++j) {
        int sum_left = 0; // Змінна для обчислення суми елементів стовпців зліва, від поточного стовпця j.
        int sum_right = 0; // Змінна для обчислення суми елементів стовпців справа, від поточного стовпця j.
        // Внутрішній цикл, який ітерується через стовпці, що знаходяться ліворуч від поточного стовпця j.
        for (int k = 0; k < j; ++k) {
            // Внутрішній цикл, який ітерується через рядки матриці.
            for (int i = 0; i < rows; ++i) {
                sum_left += matrix[i][k]; // Додаємо елементи, які розташовані ліворуч від поточного стовпця j.
            }
        }
        // Внутрішній цикл, який ітерується через стовпці, що знаходяться праворуч від поточного стовпця j.
        for (int k = j + 1; k < cols; ++k) {
            // Внутрішній цикл, який ітерується через рядки матриці.
            for (int i = 0; i < rows; ++i) {
                sum_right += matrix[i][k]; // Додаємо елементи, які розташовані праворуч від поточного стовпця j.
            }
        }

        if (sum_left > sum_right) { // Перевіряємо, чи сума елементів ліворуч від поточного стовпця j більше суми елементів праворуч.
            cout << "Стовпець " << j << " ділить матрицю таким чином, що сума елементів зліва більше суми справа.\n";
            count++; // При справдженні умови, збільшуємо лічильник.
        }
    }

    cout << "Таких стовпців: " << count;

    return 0;
}
