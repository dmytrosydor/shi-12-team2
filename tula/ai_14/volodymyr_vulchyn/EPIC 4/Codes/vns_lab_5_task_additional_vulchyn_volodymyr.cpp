#include <iostream>
#include <vector>

using namespace std;

int main() {
    vector<vector<int>> matrix = { // Створюємо двовимірний вектор matrix.
        {1, 2, 3, 4, 5},
        {6, 7, 8, 9, 10},
        {11, 12, 13, 14, 15},
        {16, 17, 18, 19, 20}
    };

    int rows = matrix.size(); // Визначаємо к-сть рядків у матриці, де функція size() для вектора повертає його розмір.
    int cols = matrix[0].size(); // Визначаємо кількості стовпців у матриці, та припускаємо, що всі рядки матриці мають однаковий розмір, тому визначення розміру першого рядка дає кількість стовпців.
    int count = 0; // Створюємо змінну count, для підрахунку к-сті рядків, які задовільняють певній умові.
    // Зовнішній цикл, ітерується через рядки матриці, залишаючи зовнішній рядок. Тобто, це виконується для кожного рядка, крім першого та останнього.
    for (int i = 1; i < rows - 1; ++i) {
        int sum_up = 0; // Змінна для обчислення суми елементів рядків зверху, від поточного рядка i.
        int sum_down = 0; // Змінна для обчислення суми елементів рядків знизу, від поточного рядка i.
         // Внутрішній цикл, який ітерується через рядки, що знаходяться зверху від поточного рядка і.
        for (int k = 0; k < i; ++k) {
            // Внутрішній цикл, який ітерується через стовпці матриці.
            for (int j = 0; j < cols; ++j) {
                sum_up += matrix[k][j]; // Додаємо елементи, які розташовані зверху від поточного рядка i.
            }
        }
        // Внутрішній цикл, який ітерується через рядки, що знаходяться знизу від поточного рядка i.
        for (int k = i + 1; k < rows; ++k) {
            // Внутрішній цикл, який ітерується через стовпці матриці.
            for (int j = 0; j < cols; ++j) {
                sum_down += matrix[k][j]; // Додаємо елементи, які розташовані знизу від поточного рядка i.
            }
        }

        if (sum_up > sum_down) { // Перевіряємо, чи сума елементів зверху від поточного стовпця i більше суми елементів знизу.
            cout << "Рядок " << i << " ділить матрицю таким чином, що сума елементів зверху більше суми знизу.\n";
            count++; // При справдженні умови, збільшуємо лічильник.
        }
    }

    cout << "Таких рядків: " << count;

    return 0;
}
