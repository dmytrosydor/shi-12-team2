#include <iostream>
#include <string>
#include <vector>

using namespace std;
// Оголошуємо структуру Book з двома полями: title (назва книги) та available (доступність книги).
struct Book {
    string title;
    bool available;
};

int main() {
// Створюємо вектор з книгами та їх доступністю.
    vector<Book> library = {
        {"1984", true},
        {"Little Hope", true},
        {"Untill Dawn", true},
        {"The Devil in Me", true}
    };
// змінні для вводу та збереження введених даних.
    char answer;
    char choice;
    string bookName;
    // Початок циклу, який буде виконуватися, доки користувач буде вводити значення 'y'.
    do {
        cout << "1) Перерахувати всі наявні книги" << endl;
        cout << "2) Взяти книгу" << endl;
        cout << "3) Повернути книгу" << endl;
        cout << "4) Завершити" << endl;
        cin >> choice; // Зчитування вибору користувача
        //  Перехід до блоку коду в залежності від вибору користувача.
        switch (choice) { 
            // Якщо користувач обрав опцію '1', виводить усі наявні книги.
            case '1': 
                for (const auto& book : library) {
                    cout << book.title << endl;
                }
                break;
            // Якщо користувач обрав опцію '2', дозволяє взяти книгу, перевіряючи доступність та назву книги.
            case '2':
                cout << "Введіть назву книги: ";
                cin.ignore(); // Ігнор попереднього сивола нового рядка в буфері введення.
                getline(cin, bookName); // Зчитуємо повністю введену назву книги у змінну bookName.

                for (Book& book : library) { // Перевірка кожної книги у бібліотеці.
                    if (book.title == bookName && book.available) { //  Перевірка, чи книга доступна та чи вона має вказану користувачем назву.
                        cout << "Ви взяли книгу з назвою: "<< bookName << ". Вітаємо!" << endl;
                        book.available = false; // Позначає книгу як недоступну.
                        goto continueMenu; // Повернення до меню.
                    } else if (book.title == bookName && !book.available) { // Перевірка на введеня правильного значення книги, яке наявне в векторі книг.
                        cout << "Книга ("<< bookName << ") вже позичена. Візьміть іншу, або поверніть цю."<< endl;
                        goto continueMenu;
                    }
                }

                cout << "На жаль, немає такої книги у наявності. Спробуйте ще раз." << endl;
                break;
            // Якщо користувач обрав опцію '3', дозволяє повернути книгу, перевіряючи наявність та стан книги.
            case '3':
                cout << "Введіть назву книги, яку хочете повернути: ";
                cin.ignore(); // Ігнор попереднього сивола нового рядка в буфері введення.
                getline(cin, bookName); // Зчитуємо повністю введену назву книги у змінну bookName

                for (Book& book : library) { // Перевіряє кожну книгу у бібліотеці для повернення.
                    if (book.title == bookName && !book.available) { // Перевіряє, чи книга з введеною назвою вже була позичена.
                        cout << "Дякую, за повернення книги!" << endl;
                        book.available = true; // Позначає книгу як доступну для позичення.
                        goto continueMenu; // Повернення до меню (запит на продовження).
                    } else if (book.title == bookName && book.available) { // Перевіряє, якщо користувач взяв і віддав книгу, або не брав її, і хоче повернути. То виводить cout нижче.
                        cout << "Книга вже повернута." << endl;
                        goto continueMenu; // Повернення до меню (запит на продовження).
                    }
                }

                cout << "Ця книга не з бібліотеки." << endl;
                break; 
            // Якщо користувач обрав опцію '4', завершує цикл.
            case '4': 
                answer = 'n';
                break;
            //  Випадок за замовчуванням, який викликається, якщо введене значення не відповідає жодному з case. Виводить повідомлення про невірний вибір.
            default: 
                cout << "Неправильне значення. Будь ласка, вкажіть номер від 1 до 4!" << endl;
                break;
        }
    // Запитує користувача, чи він хоче виконати ще якусь операцію.
    continueMenu:
        cout << "Вам ще щось потрібно? (y/n): ";
        cin >> answer;

    } while (answer == 'y'); // Кінець циклу. Повторює виконання, якщо користувач введе 'y'.

    cout << "Бувайте!" << endl;

    return 0;
}
