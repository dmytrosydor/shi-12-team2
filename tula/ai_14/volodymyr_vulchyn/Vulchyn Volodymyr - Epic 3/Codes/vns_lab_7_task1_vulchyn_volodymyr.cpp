#include <iostream>
using namespace std;

/* Оголошення функції dec_to_ter з двома параметрами.
int count: к-сть чисел, які будуть конвертовані в трійкову систему.
int numbers[]: масив цілих чисел, які потрібно конвертувати.*/

void dec_to_ter(int count, int numbers[]) { 
    for (int i = 0; i < count; ++i) { // Цикл, який проходить через кожен елемент масиву чисел з 0 до count - 1.
        int dec_num = numbers[i]; // Отримуємо поточне число для конвертації з масиву.
        int ter_num[32]; // Масив, для збереження трійкового числа
        int index = 0; // Ініціалізація індексу для масиву ter_num

        while (dec_num > 0) {
            ter_num[index] = dec_num % 3; // Залишок від ділення dec_num(десяткових чисел) на 3, який записується в ter_num за поточним індексом
            dec_num /= 3; // dec_num (десяткове число) знову ділимо на 3, щоб продовжити перетворення у трійкову систему.
            ++index; // Інкрементація index`a, для переходу до наступної позиції в ter_num
        }

        cout << "Decimal to Ternary: "; // Виведення повідомлення на консоль.
        for (int j = index - 1; j >= 0; --j) { //  Цикл for, який виводить елементи масиву ter_num з кінця до початку.
            cout << ter_num[j]; // Виведення поточного елементу на консоль.
        }
        cout << endl; // Перехід на новий рядок після виведення всіх елементів трійкового числа.
    }
}

int main() {
    // Три масиви чисел (num1, num2, num3) для подальшої конвертації у трійкову систему.
    int num1[] = {10, 15, 21};
    int num2[] = {7, 12, 18, 25};
    int num3[] = {30, 42, 56, 63, 77, 89, 99};
    // Виклик функції dec_to_ter тричі, яка передає різні масиви чисел та їхню кількість.
    dec_to_ter(3, num1);
    dec_to_ter(4, num2);
    dec_to_ter(7, num3);

    return 0;
}
