#include <iostream>
#include <math.h>
using namespace std;

// n! = n*(n-1)!
// a_n = (3^n*n!)/(3*n)!
// a_n+1 / an = 1/9n^2+9n+2

int main() 
{
    
    int temp; // тимчасове число, яке = n
    double epsilon = 0.0001; // значення епсілом 
    double sum = 0; // сума всіх чисел
    double a_n; // відповідь при якомусь n, якщо n = 1, то відповідь: 0.5, якщо n = 2, то відповідь: 0.025. Тобто, якщо введешь n = 2, то воно виведе n = 1 і n = 2.
    double factorial_n = 1; // виведення n!
    double factorial_3n = 1; // виведення (3*n)!
    int n; // значення, яке вводить користувач
    cout << "Введіть значення n: ";
    cin >> n;
    for(int i = 1 ; i <= n; i++){ // цикл, який відбувається n разів, int i = 1 - починаємо з числа 1, при умові i <= n - цикл продовжується до тих пір поки i > n; i++ - виконується в самому кінці
    factorial_n = 1; // вказали значення 1, щоб забути факторіал попереднього n. 
    factorial_3n = 1; // вказали значення 1, щоб забути факторіал попереднього n. 
    temp = i; // робиму копію i, якщо шукаємо n = 1 то temp = 1, і т.д.
    for (int i = 1; i <= temp; i++){ // цикл, який відбувається temp разів, int i = 1 - починаємо з числа 1, при умові i <= temp - цикл продовжується до тих пір поки i > temp; i++ - виконується в самому кінці
        factorial_n *= i; // домножуємо до факторіалу i temp разів.
    }
    for (int i = 1; i <= temp * 3; i++){ // цикл, який відбувається temp разів, int i = 1 - починаємо з числа 1, при умові i <= temp * 3 - цикл продовжується до тих пір поки i > temp * 3; i++ - виконується в самому кінці
        factorial_3n *= i; // домножуємо до факторіалу i (temp * 3) разів
    }
    a_n = (factorial_n * pow(3,temp)) / factorial_3n; // підрахунок нашої формули на даних момент a_n при 1 = 0.5 і т.д.
    cout << a_n << " "; // виводимо а_n
    if(a_n < epsilon) { // перевіряємо чи а_n є меншим за епсілон
    sum += a_n; // якщо а_n є меншим за епсілон, то ми додаємо його до суми, якщо  не а_n є меншим за епсілон то ми його пропускаємо.
    } 
    }
    cout << "\nСума ряду менша за epsilon: " << sum; 
    
    return 0;
}